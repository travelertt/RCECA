<?php

/**
 * @file
 * Bean Admin UI
 */

/**
 * Implements hook_menu().
 */
function bean_admin_ui_menu() {
  $items = array();

  $items['admin/structure/block_types'] = array(
    'title' => 'Block Types',
    'description' => 'Manage Block Types',
    'page callback' => 'bean_admin_ui_admin_page',
    'access arguments' => array('administer bean types'),
    'file' => 'bean_admin_ui.admin.inc',
  );

  $items['admin/structure/block_types/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/structure/block_types/add'] = array(
    'title' => 'Add block type',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bean_admin_ui_type_form'),
    'access arguments' => array('administer bean types'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'bean_admin_ui.admin.inc',
  );

  $items['admin/structure/block_types/manage/%bean_type'] = array(
    'title' => 'Edit block type',
    'title arguments' => array(4),
    'title callback' => 'bean_admin_ui_page_title',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bean_admin_ui_type_form', 4),
    'access arguments' => array('administer bean types'),
    'file' => 'bean_admin_ui.admin.inc',
  );
  $items['admin/structure/block_types/manage/%bean_type/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/block_types/manage/%bean_type/delete'] = array(
    'title' => 'Delete',
    'page arguments' => array('bean_admin_ui_type_delete_confirm', 4),
    'access arguments' => array('administer bean types'),
    'file' => 'bean_admin_ui.admin.inc',
  );

  return $items;
}

/**
 * Page title for block types
 */
function bean_admin_ui_page_title($block_type) {
  return $block_type->type;
}

/**
 * Implements hook_bean_types_api_info().
 */
function bean_admin_ui_bean_types_api_info() {
  return array(
    'api' => bean_current_version(),
  );
}

/**
 * Implements hook_bean_types()
 */
function bean_admin_ui_bean_types() {
  $plugins = array();


  // Add in the types defined in the UI
  $bean_types = bean_admin_ui_get_types();

  foreach ($bean_types as $bean_type) {
    $plugins[$bean_type->name] = array(
      'label' => $bean_type->label,
      'type' => $bean_type->name,
      'export_status' => $bean_type->type,
    );

    $plugins[$bean_type->name] += _bean_admin_default_plugin();
  }

  return $plugins;
}

/**
 * Get The Bean Types
 */
function bean_admin_ui_get_types() {
  $bean_types = &drupal_static(__FUNCTION__);

  if (empty($bean_types)) {
    $cache = cache_get('bean_types');
    if (empty($cache->data)) {
      // In install profiles, this function can get called before Drupal's created
      // our database tables (see http://drupal.org/node/1179420), so don't crash
      // Drupal installation by trying to get bean types; if we did, we'd query a
      // nonexistent table.
      if (defined('MAINTENANCE_MODE') && MAINTENANCE_MODE == 'install' &&
          drupal_get_installed_schema_version('bean_admin_ui', TRUE) == SCHEMA_UNINSTALLED) {
        $bean_types = array();
      }
      else {
        ctools_include('export');
        $bean_types = ctools_export_load_object('bean_type');
        cache_set('bean_types', $bean_types);
      }
    }
    else {
      $bean_types = $cache->data;
    }
  }

  return $bean_types;
}

/**
 * The Default plugin settings
 */
function _bean_admin_default_plugin() {
  return array(
    'label' => '',
    'type' => '',
    'editable' => TRUE,
    'handler' => array(
      'info_file' => TRUE,
      'file' => 'bean_custom.info',
      'class' => 'bean_custom',
      'parent' => 'bean',
    ),
  );
}

/**
 * Implements hook_features_api().
 */
function bean_admin_ui_features_api() {
  static $api = FALSE;
  if (!$api) {
    module_load_include('inc', 'features', 'includes/features.ctools');
    $api = ctools_component_features_api('bean_admin_ui');
    $api['bean_type']['name'] = 'Bean types';
    $api['bean_type']['file'] = drupal_get_path('module', 'bean_admin_ui') .'/includes/features.inc';
  }
  return $api;
}
